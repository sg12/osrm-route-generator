const axios = require('axios');
const fs = require('fs');

// üéØ –¢–û–ß–ù–´–ï –ö–û–û–†–î–ò–ù–ê–¢–´ –ê–í–¢–û–í–û–ö–ó–ê–õ–û–í (–ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ Yandex Geocoder)
const terminals = {
  central: [55.035500, 82.898431],       // –†–æ—Å—Å–∏—è, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ñ–î –í–æ–∫–∑–∞–ª
  gusinobrodskiy: [55.041566, 83.026464] // —Ç–æ—Ç –∂–µ –∞–¥—Ä–µ—Å ‚Äî –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å, —É—Ç–æ—á–Ω–∏ –∞–¥—Ä–µ—Å —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ
};

// üó∫Ô∏è –ú–ê–†–®–†–£–¢–´ –ü–û –°–§–û ‚Äî —Å —Ç–æ—á–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –∞–≤—Ç–æ–≤–æ–∫–∑–∞–ª–æ–≤
const routesData = [
  // === –ù–û–í–û–°–ò–ë–ò–†–°–ö–ê–Ø –û–ë–õ–ê–°–¢–¨ ===
  { coords: [terminals.central, [54.761872, 83.113900]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ë–µ—Ä–¥—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [55.022577, 82.918049]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –û–±—å', terminal: 'central' },
  { coords: [terminals.central, [54.645692, 83.308529]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ò—Å–∫–∏—Ç–∏–º', terminal: 'central' },
  { coords: [terminals.central, [54.230169, 83.376567]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ß–µ—Ä–µ–ø–∞–Ω–æ–≤–æ', terminal: 'central' },
  { coords: [terminals.central, [55.447417, 78.327011]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö—É–π–±—ã—à–µ–≤', terminal: 'central' },
  { coords: [terminals.central, [55.187779, 80.282123]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö–∞—Ä–≥–∞—Ç', terminal: 'central' },
  { coords: [terminals.central, [54.703977, 78.667571]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ó–¥–≤–∏–Ω—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [55.214697, 75.956932]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –¢–∞—Ç–∞—Ä—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [55.355751, 78.351140]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ë–∞—Ä–∞–±–∏–Ω—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [55.021390, 82.207751]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö–æ—á–µ–Ω—ë–≤–æ', terminal: 'central' },

  // === –ö–ï–ú–ï–†–û–í–°–ö–ê–Ø –û–ë–õ–ê–°–¢–¨ ===
  { coords: [terminals.gusinobrodskiy, [55.341500, 86.061012]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö–µ–º–µ—Ä–æ–≤–æ', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [53.746622, 87.118814]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [54.4128, 86.31216]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ë–µ–ª–æ–≤–æ', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [54.681612, 86.183479]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –õ–µ–Ω–∏–Ω—Å–∫-–ö—É–∑–Ω–µ—Ü–∫–∏–π', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [53.906093, 86.745088]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ü—Ä–æ–∫–æ–ø—å–µ–≤—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [54.008771, 86.644611]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö–∏—Å–µ–ª–µ–≤—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [53.692973, 88.057248]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ú–µ–∂–¥—É—Ä–µ—á–µ–Ω—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [55.713304, 84.902293]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –Æ—Ä–≥–∞', terminal: 'gusinobrodskiy' },

  // === –ê–õ–¢–ê–ô–°–ö–ò–ô –ö–†–ê–ô ===
  { coords: [terminals.central, [53.351859, 83.758621]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ë–∞—Ä–Ω–∞—É–ª', terminal: 'central' },
  { coords: [terminals.gusinobrodskiy, [52.533951, 85.179378]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ë–∏–π—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.central, [51.515703, 81.203156]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –†—É–±—Ü–æ–≤—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [52.494706, 82.788566]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ê–ª–µ–π—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [52.978515, 78.642904]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –°–ª–∞–≤–≥–æ—Ä–æ–¥', terminal: 'central' },
  { coords: [terminals.gusinobrodskiy, [53.705905, 84.937767]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ó–∞—Ä–∏–Ω—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.central, [52.922414, 78.564220]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –Ø—Ä–æ–≤–æ–µ', terminal: 'central' },

  // === –†–ï–°–ü–£–ë–õ–ò–ö–ò ===
  { coords: [terminals.gusinobrodskiy, [53.720177, 91.458719]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ê–±–∞–∫–∞–Ω', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [53.095360, 91.419417]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –°–∞—è–Ω–æ–≥–æ—Ä—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [51.718818, 94.460421]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö—ã–∑—ã–ª', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [51.956006, 85.941410]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ì–æ—Ä–Ω–æ-–ê–ª—Ç–∞–π—Å–∫', terminal: 'gusinobrodskiy' },

  // === –ò–†–ö–£–¢–°–ö–ê–Ø –û–ë–õ–ê–°–¢–¨ & –ó–ê–ë–ê–ô–ö–ê–õ–¨–ï ===
  { coords: [terminals.gusinobrodskiy, [52.289769, 104.304798]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ò—Ä–∫—É—Ç—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [57.943928, 102.733986]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –£—Å—Ç—å-–ò–ª–∏–º—Å–∫', terminal: 'gusinobrodskiy' },
  { coords: [terminals.gusinobrodskiy, [52.028366, 113.495057]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ß–∏—Ç–∞', terminal: 'gusinobrodskiy' },

  // === –¢–û–ú–°–ö–ê–Ø –û–ë–õ–ê–°–¢–¨ ===
  { coords: [terminals.central, [56.461272, 84.991289]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –¢–æ–º—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [58.312911, 82.896085]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö–æ–ª–ø–∞—à–µ–≤–æ', terminal: 'central' },

  // === –û–ú–°–ö–ê–Ø –û–ë–õ–ê–°–¢–¨ ===
  { coords: [terminals.central, [54.998618, 73.281255]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –û–º—Å–∫', terminal: 'central' },
  { coords: [terminals.central, [56.891642, 74.376966]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –¢–∞—Ä–∞', terminal: 'central' },
  { coords: [terminals.central, [55.044908, 74.576976]], name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ö–∞–ª–∞—á–∏–Ω—Å–∫', terminal: 'central' }
];

const OSRM_URL = 'http://127.0.0.1:5000/route/v1/driving/';
const results = [];

async function generateAll() {
  console.log(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é ${routesData.length} –º–∞—Ä—à—Ä—É—Ç–æ–≤...`);

  for (let i = 0; i < routesData.length; i++) {
    const [[lat1, lon1], [lat2, lon2]] = routesData[i].coords;
    const waypoints = `${lon1},${lat1};${lon2},${lat2}`;
    const url = `${OSRM_URL}${waypoints}?overview=full&geometries=geojson&steps=true&options=strict`;  // –§–∏–∫—Å: &options=strict –¥–ª—è —Ö–∞—Ä–¥–∫–æ–¥–∞ —Ç–æ—á–µ–∫

    try {
      const { data } = await axios.get(url, { timeout: 10000 });
      if (data.code !== 'Ok') {
        console.warn(`‚ö†Ô∏è  –ú–∞—Ä—à—Ä—É—Ç ${i + 1}/${routesData.length} (${routesData[i].name}) ‚Äî OSRM error: ${data.code}`);
        continue;
      }

      const route = data.routes[0];
      if (!route?.geometry?.coordinates?.length) {
        console.warn(`‚ö†Ô∏è  –ú–∞—Ä—à—Ä—É—Ç ${i + 1}/${routesData.length} (${routesData[i].name}) ‚Äî –ø—É—Å—Ç–∞—è –≥–µ–æ–º–µ—Ç—Ä–∏—è`);
        continue;
      }

      results.push({
        routeId: i + 1,
        name: routesData[i].name,
        terminal: routesData[i].terminal,
        fullGeometry: route.geometry.coordinates, // [[lon, lat], ...]
        legs: route.legs?.map((leg, idx) => ({
          segment: idx + 1,
          geometry: leg.geometry?.coordinates || [],
          distance: leg.distance,
          duration: leg.duration
        })) || [],
        totalDistance: route.distance,
        totalDuration: route.duration
      });

      console.log(`‚úÖ –ú–∞—Ä—à—Ä—É—Ç ${i + 1}/${routesData.length}: ${routesData[i].name} ‚Äî ${(route.distance / 1000).toFixed(1)} –∫–º`);

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ ${i + 1} (${routesData[i].name}):`, error.message);
    }

    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(r => setTimeout(r, 150));
  }

  // –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const outputDir = './output';
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }

  const outputPath = `${outputDir}/routes.json`;
  fs.writeFileSync(outputPath, JSON.stringify(results, null, 2), 'utf8');
  console.log(`\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${results.length} –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤ ${outputPath}`);
}

// ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
generateAll();